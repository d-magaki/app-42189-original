<h1 class="page-title">案件編集</h1>

<%= form_with(model: @project, url: project_path(@project), method: :patch, class: "edit-form") do |form| %>
  <div class="table-responsive">
    <table id="projects-table" class="table table-striped">
      <thead>
        <tr><th>項目</th><th>入力内容</th></tr>
      </thead>
      <tbody>
        <tr><th>顧客名</th><td><%= form.text_field :customer_name, class: "form-control" %></td></tr>
        <tr><th>営業拠点</th><td><%= form.text_field :sales_office, class: "form-control" %></td></tr>
        <tr><th>担当営業</th><td><%= form.text_field :sales_representative, class: "form-control" %></td></tr>
        <tr><th>依頼種別</th><td><%= form.select :request_type, Project.request_types.keys, {}, class: "form-control" %></td></tr>
        <tr><th>依頼内容</th><td><%= form.select :request_content, Project.request_contents.keys, {}, class: "form-control" %></td></tr>
        <tr><th>受注日</th><td><%= form.date_field :order_date, class: "form-control" %></td></tr>
        <tr><th>納期</th><td><%= form.date_field :due_date, class: "form-control" %></td></tr>

        <% if current_user.admin? %>
          <tr><th>売上</th><td><%= form.number_field :revenue, class: "form-control", step: 1000, id: "revenue" %></td></tr>
          <tr><th>コスト</th><td><%= form.number_field :cost, class: "form-control", step: 1000, id: "cost" %></td></tr>
          <tr><th>利益</th><td><%= form.number_field :profit, class: "form-control", step: 1000, id: "profit" %></td></tr>
        <% end %>

        <tr><th>添付資料</th>
          <td>
            <%= form.file_field :attachments, multiple: true, class: "form-control" %>
            <% if @project.attachments.attached? %>
              <p>添付済みファイル（削除する場合はチェック）</p>
              <% @project.attachments.each do |attachment| %>
                <%= link_to attachment.filename.to_s, rails_blob_path(attachment, disposition: "inline"), target: "_blank" %>
                <%= check_box_tag "remove_attachments[]", attachment.id %><br>
              <% end %>
            <% else %>
              <p>なし</p>
            <% end %>
          </td>
        </tr>

        <tr><th>備考</th><td><%= form.text_area :remarks, class: "form-control" %></td></tr>

        <% if current_user.admin? || current_user.planning? %>
          <%= hidden_field_tag "project[planning_user_id]", @project.planning_user_id, id: "planning-user-id" %>
        <% end %>
        <% if current_user.admin? || current_user.design? %>
          <%= hidden_field_tag "project[design_user_id]", @project.design_user_id, id: "design-user-id" %>
        <% end %>
        <% if current_user.admin? || current_user.development? %>
          <%= hidden_field_tag "project[development_user_id]", @project.development_user_id, id: "development-user-id" %>
        <% end %>

        <% if current_user.admin? || current_user.planning? %>
          <tr><th>企画部 社員ID</th>
              <td><%= text_field_tag :employee_id_planning, @project.planning_user&.employee_id, class: "form-control", id: "employee-id-planning" %></td>
          <tr><th>企画担当者</th><td id="planning-user-name"><%= @project.planning_user&.user_name.presence || "未設定" %></td></tr>
          <tr><th>企画開始日</th><td><%= form.date_field :planning_start_date, class: "form-control" %></td></tr>
          <tr><th>企画完了日</th><td><%= form.date_field :planning_end_date, class: "form-control" %></td></tr>
        <% end %>

        <% if current_user.admin? || current_user.design? %>
          <tr><th>設計部 社員ID</th>
              <td><%= text_field_tag :employee_id_design, @project.design_user&.employee_id, class: "form-control", id: "employee-id-design" %></td>
          <tr><th>設計担当者</th><td id="design-user-name"><%= @project.design_user&.user_name.presence || "未設定" %></td></tr>
          <tr><th>設計開始日</th><td><%= form.date_field :design_start_date, class: "form-control" %></td></tr>
          <tr><th>設計完了日</th><td><%= form.date_field :design_end_date, class: "form-control" %></td></tr>
        <% end %>

        <% if current_user.admin? || current_user.development? %>
          <tr><th>開発部 社員ID</th>
              <td><%= text_field_tag :employee_id_development, @project.development_user&.employee_id, class: "form-control", id: "employee-id-development" %></td>
          <tr><th>開発担当者</th><td id="development-user-name"><%= @project.development_user&.user_name.presence || "未設定" %></td></tr>
          <tr><th>開発開始日</th><td><%= form.date_field :development_start_date, class: "form-control" %></td></tr>
          <tr><th>開発完了日</th><td><%= form.date_field :development_end_date, class: "form-control" %></td></tr>
        <% end %>

        <tr><th>状態</th><td><%= form.select :status, Project.statuses.keys.map { |s| [s.humanize, s] }, {}, class: "form-control" %></td></tr>
      </tbody>
    </table>
  </div>

  <div class="actions">
    <%= form.submit "更新", class: "btn btn-primary btn-lg" %>
    <%= link_to "キャンセル", project_path(@project), class: "btn btn-secondary btn-lg" %>
  </div>
<% end %>

<script>
function setupEmployeeInput(inputId, expectedDepartment, hiddenId, nameId) {
  const input = document.getElementById(inputId);
  if (!input) return;

  input.addEventListener("change", () => {
    const employeeId = input.value.trim();

    if (!employeeId) {
      const hidden = document.getElementById(hiddenId);
      const nameCell = document.getElementById(nameId);
      if (hidden) hidden.value = "";
      if (nameCell) nameCell.textContent = "未設定";
      return;
    }

    fetch(`/users/find_by_employee_id?employee_id=${employeeId}`)
      .then(response => {
        if (!response.ok) throw new Error("User not found");
        return response.json();
      })
      .then(data => {
        const departmentLabel = {
          planning: "企画部",
          design: "情報設計部",
          development: "開発部"
        };
        if (expectedDepartment && data.department !== expectedDepartment) {
          alert(`${departmentLabel[expectedDepartment]} に登録されている社員IDを入力してください。`);
          input.value = "";
          input.focus();
          return;
        }
        document.getElementById(hiddenId).value = data.id;
        document.getElementById(nameId).textContent = data.user_name || "未設定";
      })
      .catch(error => {
        console.error("社員情報の取得に失敗:", error);
        const hidden = document.getElementById(hiddenId);
        const nameCell = document.getElementById(nameId);
        if (hidden) hidden.value = "";
        if (nameCell) nameCell.textContent = "未設定";
      });
  });
}

document.addEventListener("turbo:load", () => {
  setupEmployeeInput("employee-id-planning", "planning", "planning-user-id", "planning-user-name");
  setupEmployeeInput("employee-id-design", "design", "design-user-id", "design-user-name");
  setupEmployeeInput("employee-id-development", "development", "development-user-id", "development-user-name");

  const revenue = document.getElementById("revenue");
  const cost = document.getElementById("cost");
  const profit = document.getElementById("profit");

  if (revenue && cost && profit) {
    const updateProfit = () => {
      const r = parseInt(revenue.value) || 0;
      const c = parseInt(cost.value) || 0;
      profit.value = r - c;
    };

    const updateRevenue = () => {
      const c = parseInt(cost.value) || 0;
      const p = parseInt(profit.value) || 0;
      revenue.value = c + p;
    };

    revenue.addEventListener("input", updateProfit);
    cost.addEventListener("input", updateProfit);
    profit.addEventListener("input", updateRevenue);
  }
});
</script>
